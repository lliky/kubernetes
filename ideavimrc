nnoremap <SPACE> <Nop>
let mapleader = ";"

set hlsearch
set incsearch
set ignorecase
set smartcase

set easymotion
set surround

nnoremap L $
nnoremap H ^
vnoremap L $
vnoremap H ^

" clear the highlighted search result
nnoremap <Leader>sc :nohlsearch<CR>

" move half page faster
nnoremap <leader>d <C-d>
nnoremap <leader>u <C-u>

noremap tn gt
nnoremap tp gT

" window operation
nnoremap <leader>ww <C-W>w
nnoremap <leader>wd <C-W>c
nnoremap <leader>wj <C-W>j
nnoremap <leader>wk <C-W>k
nnoremap <leader>wh <C-W>h
nnoremap <leader>wl <C-W>l
nnoremap <leader>ws <C-W>s
nnoremap <leader>w- <C-W>s
nnoremap <leader>wv <C-W>v
nnoremap <leader>w\| <C-W>s

" Insert mode shortCut
inoremap <C-h> <Left>
inoremap <C-j> <Down>
inoremap <C-k> <Up>
inoremap <C-l> <Right>
inoremap <C-a> <Home>
inoremap <C-e> <End>
inoremap <C-d> <Delete>

"cpoy and paste
nnoremap <leader>y "*y
nnoremap <leader>p "*p
nnoremap <leader>P "0p
vnoremap Y "+y


" Quit normal mode
nnoremap<Space>q :q<CR>
nnoremap<Space>Q :qa!<CR>

"edit vimrc
nnoremap <leader>ve :e ~/.ideavimrc<CR>
nnoremap <leader>vw :w!<CR>
nnoremap <leader>vs :source ~/.ideavimrc<CR>

" goland built in key map
noremap <leader>a :action GotoAction<CR>
nnoremap <leader>b :action Bookmarks<CR>
nnoremap <leader>c :action GotoClass<CR>
nnoremap <leader>e :action SearchEverywhere<CR>
nnoremap <leader>f :action FindInPath<CR>
nnoremap <leader>gc :action Git.CompareWithBranch<CR>
nnoremap <leader>gr :action Git.ResolveConflicts<CR>
nnoremap <leader>ga :action Annotate<CR>
nnoremap <leader>or :action FileMenu<CR>
nnoremap <leader>r :action RecentFiles<CR>
nnoremap <leader>s :action FileStructPopup<CR>

" navigation
nnoremap gs :action GotoSuperMethod<CR>
nnoremap gb :action JumpToLastChange<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gr :action RenameElement<CR>

"Code action
nnoremap U :action FindUsages<CR>
nnoremap R :action RenameElement<CR>
nnoremap == :action ReformatCode<CR>
vnoremap = :action ReformatCode<CR>
nnoremap cc :action CommentByLineComment<CR>
vnoremap cc :action CommentByLineComment<CR>
